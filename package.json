{
  "name": "key-code",
  "displayName": "Key Code",
  "description": "An interactive tool to learn VSCode shortcuts",
  "version": "0.14.0",
  "engines": {
    "vscode": "^1.65.0"
  },
  "author": {
    "name": "Shaun Hamilton"
  },
  "keywords": [
    "vscode",
    "keyboard",
    "shortcuts",
    "key-code"
  ],
  "publisher": "hamilton",
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/ShaunSHamilton/key-code.git"
  },
  "license": "BSD-3-Clause",
  "bugs": {
    "url": "https://github.com/ShaunSHamilton/key-code/issues"
  },
  "icon": "images/icon_192x192.png",
  "activationEvents": [
    "onCommand:key-code.start"
  ],
  "main": "./dist/extension.js",
  "contributes": {
    "keybindings": [
      {
        "key": "escape escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape escape",
          "command": "workbench.action.exitZenMode"
        },
        "when": "key-code.active && inZenMode"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "closeReferenceSearch"
        },
        "when": "key-code.active && inReferenceSearchEditor && !config.editor.stablePeek"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeReferenceSearch"
        },
        "when": "key-code.active && inReferenceSearchEditor && !config.editor.stablePeek"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.closeTestPeek"
        },
        "when": "key-code.active && testing.isInPeek && !config.editor.stablePeek || testing.isPeekVisible && !config.editor.stablePeek"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "cancelSelection"
        },
        "when": "key-code.active && editorHasSelection && textInputFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "cancelSelection"
        },
        "when": "key-code.active && editorHasSelection && textInputFocus"
      },
      {
        "key": "ctrl+end",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+end",
          "command": "cursorBottom"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+end",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+end",
          "command": "cursorBottomSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+alt+down",
          "command": "cursorColumnSelectDown"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+alt+left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+alt+left",
          "command": "cursorColumnSelectLeft"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+alt+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+alt+pagedown",
          "command": "cursorColumnSelectPageDown"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+alt+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+alt+pageup",
          "command": "cursorColumnSelectPageUp"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+alt+right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+alt+right",
          "command": "cursorColumnSelectRight"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+alt+up",
          "command": "cursorColumnSelectUp"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "cursorDown"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+down",
          "command": "cursorDownSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+down",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+down",
          "command": "cursorDownSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "end",
        "command": "key-code.keybind",
        "when": "key-code.active && textInputFocus",
        "args": {
          "key": "end",
          "command": "key-code.keybind",
          "sticky": false
        }
      },
      {
        "key": "shift+end",
        "command": "key-code.keybind",
        "when": "key-code.active && textInputFocus",
        "args": {
          "key": "shift+end",
          "command": "key-code.keybind",
          "sticky": false
        }
      },
      {
        "key": "home",
        "command": "key-code.keybind",
        "args": {
          "key": "home",
          "command": "cursorHome"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+home",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+home",
          "command": "cursorHomeSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "cursorLeft"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+left",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+left",
          "command": "cursorLeftSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "pagedown",
          "command": "cursorPageDown"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+pagedown",
          "command": "cursorPageDownSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "pageup",
          "command": "cursorPageUp"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+pageup",
          "command": "cursorPageUpSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "right",
        "command": "key-code.keybind",
        "args": {
          "key": "right",
          "command": "cursorRight"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+right",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+right",
          "command": "cursorRightSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+home",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+home",
          "command": "cursorTop"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+home",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+home",
          "command": "cursorTopSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "cursorUp"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+shift+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+up",
          "command": "cursorUpSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+up",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+up",
          "command": "cursorUpSelect"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+backspace",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+backspace",
          "command": "deleteLeft"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "backspace",
        "command": "key-code.keybind",
        "args": {
          "key": "backspace",
          "command": "deleteLeft"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "deleteRight"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+a",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+a",
          "command": "editor.action.selectAll"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+l",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+l",
          "command": "expandLineSelection"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "shift+tab",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+tab",
          "command": "outdent"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
      },
      {
        "key": "ctrl+shift+z",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+z",
          "command": "redo"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+y",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+y",
          "command": "redo"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "scrollLineDown"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+up",
          "command": "scrollLineUp"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "alt+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+pagedown",
          "command": "scrollPageDown"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "alt+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+pageup",
          "command": "scrollPageUp"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "tab",
        "command": "key-code.keybind",
        "args": {
          "key": "tab",
          "command": "tab"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
      },
      {
        "key": "ctrl+z",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+z",
          "command": "undo"
        },
        "when": "key-code.active"
      },
      {
        "key": "shift+down",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+down",
          "command": "cursorColumnSelectDown"
        },
        "when": "key-code.active && editorColumnSelection && textInputFocus"
      },
      {
        "key": "shift+left",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+left",
          "command": "cursorColumnSelectLeft"
        },
        "when": "key-code.active && editorColumnSelection && textInputFocus"
      },
      {
        "key": "shift+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+pagedown",
          "command": "cursorColumnSelectPageDown"
        },
        "when": "key-code.active && editorColumnSelection && textInputFocus"
      },
      {
        "key": "shift+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+pageup",
          "command": "cursorColumnSelectPageUp"
        },
        "when": "key-code.active && editorColumnSelection && textInputFocus"
      },
      {
        "key": "shift+right",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+right",
          "command": "cursorColumnSelectRight"
        },
        "when": "key-code.active && editorColumnSelection && textInputFocus"
      },
      {
        "key": "shift+up",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+up",
          "command": "cursorColumnSelectUp"
        },
        "when": "key-code.active && editorColumnSelection && textInputFocus"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "removeSecondaryCursors"
        },
        "when": "key-code.active && editorHasMultipleSelections && textInputFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "removeSecondaryCursors"
        },
        "when": "key-code.active && editorHasMultipleSelections && textInputFocus"
      },
      {
        "key": "f12",
        "command": "key-code.keybind",
        "args": {
          "key": "f12",
          "command": "goToNextReference"
        },
        "when": "key-code.active && inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "key": "f4",
        "command": "key-code.keybind",
        "args": {
          "key": "f4",
          "command": "goToNextReference"
        },
        "when": "key-code.active && inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "key": "shift+f12",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f12",
          "command": "goToPreviousReference"
        },
        "when": "key-code.active && inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "key": "shift+f4",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f4",
          "command": "goToPreviousReference"
        },
        "when": "key-code.active && inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "refactorPreview.apply"
        },
        "when": "key-code.active && refactorPreview.enabled && refactorPreview.hasCheckedChanges && focusedView == 'refactorPreview'"
      },
      {
        "key": "alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+enter",
          "command": "testing.editFocusedTest"
        },
        "when": "key-code.active && focusedView == 'workbench.view.testing'"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "notebook.cell.quitEdit"
        },
        "when": "key-code.active && inputFocus && notebookEditorFocused && !editorHasMultipleSelections && !editorHasSelection && !editorHoverVisible"
      },
      {
        "key": "ctrl+alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+enter",
          "command": "notebook.cell.quitEdit"
        },
        "when": "key-code.active && inputFocus && notebookEditorFocused && notebookCellType == 'markup'"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "actions.find"
        },
        "when": "key-code.active && editorFocus || editorIsOpen"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "breakpointWidget.action.acceptInput"
        },
        "when": "key-code.active && breakpointWidgetVisible && inBreakpointWidget"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "closeBreakpointWidget"
        },
        "when": "key-code.active && breakpointWidgetVisible && textInputFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeBreakpointWidget"
        },
        "when": "key-code.active && breakpointWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+u",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+u",
          "command": "cursorUndo"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+right",
          "command": "cursorWordEndRight"
        },
        "when": "key-code.active && textInputFocus && !accessibilityModeEnabled"
      },
      {
        "key": "ctrl+shift+right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+right",
          "command": "cursorWordEndRightSelect"
        },
        "when": "key-code.active && textInputFocus && !accessibilityModeEnabled"
      },
      {
        "key": "ctrl+left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+left",
          "command": "cursorWordLeft"
        },
        "when": "key-code.active && textInputFocus && !accessibilityModeEnabled"
      },
      {
        "key": "ctrl+shift+left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+left",
          "command": "cursorWordLeftSelect"
        },
        "when": "key-code.active && textInputFocus && !accessibilityModeEnabled"
      },
      {
        "key": "ctrl+backspace",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+backspace",
          "command": "deleteWordLeft"
        },
        "when": "key-code.active && textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+delete",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+delete",
          "command": "deleteWordRight"
        },
        "when": "key-code.active && textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+c",
          "command": "editor.action.addCommentLine"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+d",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+d",
          "command": "editor.action.addSelectionToNextFindMatch"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "shift+alt+.",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+.",
          "command": "editor.action.autoFix"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)quickfix\\b/"
      },
      {
        "key": "shift+alt+a",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+a",
          "command": "editor.action.blockComment"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.action.cancelSelectionAnchor"
        },
        "when": "key-code.active && editorTextFocus && selectionAnchorSet"
      },
      {
        "key": "ctrl+f2",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f2",
          "command": "editor.action.changeAll"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+insert",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+insert",
          "command": "editor.action.clipboardCopyAction"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+c",
          "command": "editor.action.clipboardCopyAction"
        },
        "when": "key-code.active"
      },
      {
        "key": "shift+delete",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+delete",
          "command": "editor.action.clipboardCutAction"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+x",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+x",
          "command": "editor.action.clipboardCutAction"
        },
        "when": "key-code.active"
      },
      {
        "key": "shift+insert",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+insert",
          "command": "editor.action.clipboardPasteAction"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+v",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+v",
          "command": "editor.action.clipboardPasteAction"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+/",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+/",
          "command": "editor.action.commentLine"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+down",
          "command": "editor.action.copyLinesDownAction"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "shift+alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+up",
          "command": "editor.action.copyLinesUpAction"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k ctrl+k",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+k",
          "command": "editor.action.defineKeybinding"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly && editorLangId == 'jsonc'"
      },
      {
        "key": "ctrl+shift+k",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+k",
          "command": "editor.action.deleteLines"
        },
        "when": "key-code.active && textInputFocus && !editorReadonly"
      },
      {
        "key": "f7",
        "command": "key-code.keybind",
        "args": {
          "key": "f7",
          "command": "editor.action.diffReview.next"
        },
        "when": "key-code.active && isInDiffEditor"
      },
      {
        "key": "shift+f7",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f7",
          "command": "editor.action.diffReview.prev"
        },
        "when": "key-code.active && isInDiffEditor"
      },
      {
        "key": "alt+f3",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+f3",
          "command": "editor.action.dirtydiff.next"
        },
        "when": "key-code.active && editorTextFocus && !textCompareEditorActive"
      },
      {
        "key": "shift+alt+f3",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f3",
          "command": "editor.action.dirtydiff.previous"
        },
        "when": "key-code.active && editorTextFocus && !textCompareEditorActive"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "editor.action.extensioneditor.findNext"
        },
        "when": "key-code.active && webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "editor.action.extensioneditor.findPrevious"
        },
        "when": "key-code.active && webviewFindWidgetFocused && !editorFocus && activeEditor == 'workbench.editor.extension'"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "editor.action.extensioneditor.showfind"
        },
        "when": "key-code.active && !editorFocus && activeEditor == 'workbench.editor.extension'"
      },
      {
        "key": "shift+alt+f",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f",
          "command": "editor.action.formatDocument"
        },
        "when": "key-code.active && editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
      },
      {
        "key": "shift+alt+f",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f",
          "command": "editor.action.formatDocument.none"
        },
        "when": "key-code.active && editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
      },
      {
        "key": "ctrl+k ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+f",
          "command": "editor.action.formatSelection"
        },
        "when": "key-code.active && editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+f12",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f12",
          "command": "editor.action.goToImplementation"
        },
        "when": "key-code.active && editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "key": "shift+f12",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f12",
          "command": "editor.action.goToReferences"
        },
        "when": "key-code.active && editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "key": "ctrl+shift+.",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+.",
          "command": "editor.action.inPlaceReplace.down"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+shift+,",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+,",
          "command": "editor.action.inPlaceReplace.up"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+]",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+]",
          "command": "editor.action.indentLines"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.action.inlineSuggest.hide"
        },
        "when": "key-code.active && inlineSuggestionVisible"
      },
      {
        "key": "alt+]",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+]",
          "command": "editor.action.inlineSuggest.showNext"
        },
        "when": "key-code.active && inlineSuggestionVisible && !editorReadonly"
      },
      {
        "key": "alt+[",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+[",
          "command": "editor.action.inlineSuggest.showPrevious"
        },
        "when": "key-code.active && inlineSuggestionVisible && !editorReadonly"
      },
      {
        "key": "ctrl+alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+up",
          "command": "editor.action.insertCursorAbove"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "shift+alt+i",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+i",
          "command": "editor.action.insertCursorAtEndOfEachLineSelected"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+down",
          "command": "editor.action.insertCursorBelow"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "editor.action.insertLineAfter"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+enter",
          "command": "editor.action.insertLineBefore"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+shift+\\",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+\\",
          "command": "editor.action.jumpToBracket"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+shift+f2",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+f2",
          "command": "editor.action.linkedEditing"
        },
        "when": "key-code.active && editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "alt+f8",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+f8",
          "command": "editor.action.marker.next"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "f8",
        "command": "key-code.keybind",
        "args": {
          "key": "f8",
          "command": "editor.action.marker.nextInFiles"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "shift+alt+f8",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f8",
          "command": "editor.action.marker.prev"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "shift+f8",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f8",
          "command": "editor.action.marker.prevInFiles"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+down",
          "command": "editor.action.moveLinesDownAction"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+up",
          "command": "editor.action.moveLinesUpAction"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k ctrl+d",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+d",
          "command": "editor.action.moveSelectionToNextFindMatch"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "f3",
        "command": "key-code.keybind",
        "args": {
          "key": "f3",
          "command": "editor.action.nextMatchFindAction"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "editor.action.nextMatchFindAction"
        },
        "when": "key-code.active && editorFocus && findInputFocussed"
      },
      {
        "key": "ctrl+f3",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f3",
          "command": "editor.action.nextSelectionMatchFindAction"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "shift+alt+o",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+o",
          "command": "editor.action.organizeImports"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly && supportedCodeAction =~ /(\\s|^)source\\.organizeImports\\b/"
      },
      {
        "key": "ctrl+[",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+[",
          "command": "editor.action.outdentLines"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "alt+f12",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+f12",
          "command": "editor.action.peekDefinition"
        },
        "when": "key-code.active && editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "key": "ctrl+shift+f12",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+f12",
          "command": "editor.action.peekImplementation"
        },
        "when": "key-code.active && editorHasImplementationProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
      },
      {
        "key": "shift+f3",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f3",
          "command": "editor.action.previousMatchFindAction"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "editor.action.previousMatchFindAction"
        },
        "when": "key-code.active && editorFocus && findInputFocussed"
      },
      {
        "key": "ctrl+shift+f3",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+f3",
          "command": "editor.action.previousSelectionMatchFindAction"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "ctrl+.",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+.",
          "command": "editor.action.quickFix"
        },
        "when": "key-code.active && editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+shift+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+r",
          "command": "editor.action.refactor"
        },
        "when": "key-code.active && editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k ctrl+u",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+u",
          "command": "editor.action.removeCommentLine"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "f2",
        "command": "key-code.keybind",
        "args": {
          "key": "f2",
          "command": "editor.action.rename"
        },
        "when": "key-code.active && editorHasRenameProvider && editorTextFocus && !editorReadonly"
      },
      {
        "key": "f12",
        "command": "key-code.keybind",
        "args": {
          "key": "f12",
          "command": "editor.action.revealDefinition"
        },
        "when": "key-code.active && editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "key": "ctrl+k f12",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k f12",
          "command": "editor.action.revealDefinitionAside"
        },
        "when": "key-code.active && editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
      },
      {
        "key": "ctrl+k ctrl+k",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+k",
          "command": "editor.action.selectFromAnchorToCursor"
        },
        "when": "key-code.active && editorTextFocus && selectionAnchorSet"
      },
      {
        "key": "ctrl+shift+l",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+l",
          "command": "editor.action.selectHighlights"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "ctrl+k ctrl+b",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+b",
          "command": "editor.action.setSelectionAnchor"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "alt+f1",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+f1",
          "command": "editor.action.showAccessibilityHelp"
        },
        "when": "key-code.active"
      },
      {
        "key": "shift+f10",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f10",
          "command": "editor.action.showContextMenu"
        },
        "when": "key-code.active && textInputFocus"
      },
      {
        "key": "ctrl+k ctrl+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+i",
          "command": "editor.action.showHover"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "shift+alt+right",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+right",
          "command": "editor.action.smartSelect.expand"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "shift+alt+left",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+left",
          "command": "editor.action.smartSelect.shrink"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+h",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+h",
          "command": "editor.action.startFindReplaceAction"
        },
        "when": "key-code.active && editorFocus || editorIsOpen"
      },
      {
        "key": "ctrl+m",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+m",
          "command": "editor.action.toggleTabFocusMode"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+z",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+z",
          "command": "editor.action.toggleWordWrap"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+space",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+space",
          "command": "editor.action.triggerParameterHints"
        },
        "when": "key-code.active && editorHasSignatureHelpProvider && editorTextFocus"
      },
      {
        "key": "ctrl+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+i",
          "command": "editor.action.triggerSuggest"
        },
        "when": "key-code.active && editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+space",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+space",
          "command": "editor.action.triggerSuggest"
        },
        "when": "key-code.active && editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
      },
      {
        "key": "ctrl+k ctrl+x",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+x",
          "command": "editor.action.trimTrailingWhitespace"
        },
        "when": "key-code.active && editorTextFocus && !editorReadonly"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "editor.action.webvieweditor.findNext"
        },
        "when": "key-code.active && webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "editor.action.webvieweditor.findPrevious"
        },
        "when": "key-code.active && webviewFindWidgetFocused && !editorFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.action.webvieweditor.hideFind"
        },
        "when": "key-code.active && webviewFindWidgetVisible && !editorFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "editor.action.webvieweditor.showFind"
        },
        "when": "key-code.active && webviewFindWidgetEnabled && !editorFocus && activeEditor == 'WebviewEditor'"
      },
      {
        "key": "f7",
        "command": "key-code.keybind",
        "args": {
          "key": "f7",
          "command": "editor.action.wordHighlight.next"
        },
        "when": "key-code.active && editorTextFocus && hasWordHighlights"
      },
      {
        "key": "shift+f7",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f7",
          "command": "editor.action.wordHighlight.prev"
        },
        "when": "key-code.active && editorTextFocus && hasWordHighlights"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.cancelOperation"
        },
        "when": "key-code.active && cancellableOperation"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.debug.action.closeExceptionWidget"
        },
        "when": "key-code.active && exceptionWidgetVisible"
      },
      {
        "key": "ctrl+k ctrl+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+i",
          "command": "editor.debug.action.showDebugHover"
        },
        "when": "key-code.active && editorTextFocus && inDebugMode"
      },
      {
        "key": "f9",
        "command": "key-code.keybind",
        "args": {
          "key": "f9",
          "command": "editor.debug.action.toggleBreakpoint"
        },
        "when": "key-code.active && debuggersAvailable && editorTextFocus"
      },
      {
        "key": "tab",
        "command": "key-code.keybind",
        "args": {
          "key": "tab",
          "command": "editor.emmet.action.expandAbbreviation"
        },
        "when": "key-code.active && config.emmet.triggerExpansionOnTab && editorTextFocus && !editorReadonly && !editorTabMovesFocus"
      },
      {
        "key": "ctrl+shift+[",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+[",
          "command": "editor.fold"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+0",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+0",
          "command": "editor.foldAll"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+/",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+/",
          "command": "editor.foldAllBlockComments"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+-",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+-",
          "command": "editor.foldAllExcept"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+8",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+8",
          "command": "editor.foldAllMarkerRegions"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+1",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+1",
          "command": "editor.foldLevel1"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+2",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+2",
          "command": "editor.foldLevel2"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+3",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+3",
          "command": "editor.foldLevel3"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+4",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+4",
          "command": "editor.foldLevel4"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+5",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+5",
          "command": "editor.foldLevel5"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+6",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+6",
          "command": "editor.foldLevel6"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+7",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+7",
          "command": "editor.foldLevel7"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+[",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+[",
          "command": "editor.foldRecursively"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "f12",
        "command": "key-code.keybind",
        "args": {
          "key": "f12",
          "command": "editor.gotoNextSymbolFromResult"
        },
        "when": "key-code.active && hasSymbols"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.gotoNextSymbolFromResult.cancel"
        },
        "when": "key-code.active && hasSymbols"
      },
      {
        "key": "ctrl+k ctrl+l",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+l",
          "command": "editor.toggleFold"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+shift+]",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+]",
          "command": "editor.unfold"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+j",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+j",
          "command": "editor.unfoldAll"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+=",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+=",
          "command": "editor.unfoldAllExcept"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+9",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+9",
          "command": "editor.unfoldAllMarkerRegions"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "ctrl+k ctrl+]",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+]",
          "command": "editor.unfoldRecursively"
        },
        "when": "key-code.active && editorTextFocus && foldingEnabled"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "inlayHints.stopReadingLineWithHint"
        },
        "when": "key-code.active && isReadingLineWithInlayHints"
      },
      {
        "key": "tab",
        "command": "key-code.keybind",
        "args": {
          "key": "tab",
          "command": "insertSnippet"
        },
        "when": "key-code.active && editorTextFocus && hasSnippetCompletions && !editorTabMovesFocus && !inSnippetMode"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "interactive.execute"
        },
        "when": "key-code.active && resourceScheme == 'vscode-interactive'"
      },
      {
        "key": "pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "pagedown",
          "command": "notebook.cell.cursorPageDown"
        },
        "when": "key-code.active && editorTextFocus && inputFocus && notebookEditorFocused"
      },
      {
        "key": "shift+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+pagedown",
          "command": "notebook.cell.cursorPageDownSelect"
        },
        "when": "key-code.active && editorTextFocus && inputFocus && notebookEditorFocused"
      },
      {
        "key": "pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "pageup",
          "command": "notebook.cell.cursorPageUp"
        },
        "when": "key-code.active && editorTextFocus && inputFocus && notebookEditorFocused"
      },
      {
        "key": "shift+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+pageup",
          "command": "notebook.cell.cursorPageUpSelect"
        },
        "when": "key-code.active && editorTextFocus && inputFocus && notebookEditorFocused"
      },
      {
        "key": "ctrl+alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+enter",
          "command": "notebook.cell.execute"
        },
        "when": "key-code.active && notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
      },
      {
        "key": "alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+enter",
          "command": "notebook.cell.executeAndInsertBelow"
        },
        "when": "key-code.active && notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "notebook.cell.executeAndSelectBelow"
        },
        "when": "key-code.active && notebookCellListFocused && notebookCellType == 'markup' || notebookCellListFocused && notebookMissingKernelExtension && !notebookCellExecuting && notebookCellType == 'code' || notebookCellListFocused && !notebookCellExecuting && notebookCellType == 'code' && notebookKernelCount > 0"
      },
      {
        "key": "ctrl+shift+v",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+v",
          "command": "notebook.cell.pasteAbove"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "notebook.focusNextEditor"
        },
        "when": "key-code.active && config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "notebook.focusPreviousEditor"
        },
        "when": "key-code.active && config.notebook.navigation.allowNavigateToSurroundingCells && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"
      },
      {
        "key": "shift+alt+f",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f",
          "command": "notebook.formatCell"
        },
        "when": "key-code.active && editorHasDocumentFormattingProvider && editorTextFocus && inCompositeEditor && notebookEditable && !editorReadonly && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "openReferenceToSide"
        },
        "when": "key-code.active && listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "repl.action.acceptInput"
        },
        "when": "key-code.active && inDebugRepl && textInputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "repl.action.filter"
        },
        "when": "key-code.active && inDebugRepl && textInputFocus"
      },
      {
        "key": "ctrl+shift+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+r",
          "command": "rerunSearchEditorSearch"
        },
        "when": "key-code.active && inSearchEditor"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "search.action.focusQueryEditorWidget"
        },
        "when": "key-code.active && inSearchEditor"
      },
      {
        "key": "ctrl+shift+backspace",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+backspace",
          "command": "search.searchEditor.action.deleteFileResults"
        },
        "when": "key-code.active && inSearchEditor"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "settings.action.clearSearchResults"
        },
        "when": "key-code.active && inSettingsEditor && inSettingsSearch"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "settings.action.focusSettingsFile"
        },
        "when": "key-code.active && inSettingsSearch && !suggestWidgetVisible"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "settings.action.search"
        },
        "when": "key-code.active && inSettingsEditor"
      },
      {
        "key": "ctrl+/",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+/",
          "command": "toggleExplainMode"
        },
        "when": "key-code.active && suggestWidgetVisible"
      },
      {
        "key": "ctrl+k f2",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k f2",
          "command": "togglePeekWidgetFocus"
        },
        "when": "key-code.active && inReferenceSearchEditor || referenceSearchVisible"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "welcome.goBack"
        },
        "when": "key-code.active && inWelcome && activeEditor == 'gettingStartedPage'"
      },
      {
        "key": "alt+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+f5",
          "command": "workbench.action.editor.nextChange"
        },
        "when": "key-code.active && editorTextFocus && !textCompareEditorActive"
      },
      {
        "key": "shift+alt+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f5",
          "command": "workbench.action.editor.previousChange"
        },
        "when": "key-code.active && editorTextFocus && !textCompareEditorActive"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "workbench.action.hideComment"
        },
        "when": "key-code.active && commentEditorFocused"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "workbench.action.hideComment"
        },
        "when": "key-code.active && commentEditorFocused"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "workbench.action.submitComment"
        },
        "when": "key-code.active && commentEditorFocused"
      },
      {
        "key": "alt+f8",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+f8",
          "command": "testing.goToNextMessage"
        },
        "when": "key-code.active && editorFocus && testing.isPeekVisible"
      },
      {
        "key": "shift+alt+f8",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f8",
          "command": "testing.goToPreviousMessage"
        },
        "when": "key-code.active && editorFocus && testing.isPeekVisible"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "closeFindWidget"
        },
        "when": "key-code.active && editorFocus && findWidgetVisible && !isComposing"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeFindWidget"
        },
        "when": "key-code.active && editorFocus && findWidgetVisible && !isComposing"
      },
      {
        "key": "ctrl+alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+enter",
          "command": "editor.action.replaceAll"
        },
        "when": "key-code.active && editorFocus && findWidgetVisible"
      },
      {
        "key": "ctrl+shift+1",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+1",
          "command": "editor.action.replaceOne"
        },
        "when": "key-code.active && editorFocus && findWidgetVisible"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "editor.action.replaceOne"
        },
        "when": "key-code.active && editorFocus && findWidgetVisible && replaceInputFocussed"
      },
      {
        "key": "alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+enter",
          "command": "editor.action.selectAllMatches"
        },
        "when": "key-code.active && editorFocus && findWidgetVisible"
      },
      {
        "key": "alt+c",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+c",
          "command": "toggleFindCaseSensitive"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "alt+l",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+l",
          "command": "toggleFindInSelection"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "alt+r",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+r",
          "command": "toggleFindRegex"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "alt+w",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+w",
          "command": "toggleFindWholeWord"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "alt+p",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+p",
          "command": "togglePreserveCase"
        },
        "when": "key-code.active && editorFocus"
      },
      {
        "key": "tab",
        "command": "key-code.keybind",
        "args": {
          "key": "tab",
          "command": "jumpToNextSnippetPlaceholder"
        },
        "when": "key-code.active && editorTextFocus && hasNextTabstop && inSnippetMode"
      },
      {
        "key": "shift+tab",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+tab",
          "command": "jumpToPrevSnippetPlaceholder"
        },
        "when": "key-code.active && editorTextFocus && hasPrevTabstop && inSnippetMode"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "leaveEditorMessage"
        },
        "when": "key-code.active && messageVisible"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "leaveSnippet"
        },
        "when": "key-code.active && editorTextFocus && inSnippetMode"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "leaveSnippet"
        },
        "when": "key-code.active && editorTextFocus && inSnippetMode"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "closeDirtyDiff"
        },
        "when": "key-code.active && dirtyDiffVisible"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeDirtyDiff"
        },
        "when": "key-code.active && dirtyDiffVisible"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "closeMarkersNavigation"
        },
        "when": "key-code.active && editorFocus && markersNavigationVisible"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeMarkersNavigation"
        },
        "when": "key-code.active && editorFocus && markersNavigationVisible"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "notifications.hideToasts"
        },
        "when": "key-code.active && notificationToastsVisible"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "closeParameterHints"
        },
        "when": "key-code.active && editorFocus && parameterHintsVisible"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeParameterHints"
        },
        "when": "key-code.active && editorFocus && parameterHintsVisible"
      },
      {
        "key": "alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+down",
          "command": "showNextParameterHint"
        },
        "when": "key-code.active && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "showNextParameterHint"
        },
        "when": "key-code.active && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "key": "alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+up",
          "command": "showPrevParameterHint"
        },
        "when": "key-code.active && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "showPrevParameterHint"
        },
        "when": "key-code.active && editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
      },
      {
        "key": "shift+tab",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+tab",
          "command": "acceptAlternativeSelectedSuggestion"
        },
        "when": "key-code.active && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "acceptAlternativeSelectedSuggestion"
        },
        "when": "key-code.active && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "tab",
        "command": "key-code.keybind",
        "args": {
          "key": "tab",
          "command": "acceptSelectedSuggestion"
        },
        "when": "key-code.active && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "acceptSelectedSuggestion"
        },
        "when": "key-code.active && acceptSuggestionOnEnter && suggestWidgetVisible && suggestionMakesTextEdit && textInputFocus"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "hideSuggestWidget"
        },
        "when": "key-code.active && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "hideSuggestWidget"
        },
        "when": "key-code.active && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "tab",
        "command": "key-code.keybind",
        "args": {
          "key": "tab",
          "command": "insertBestCompletion"
        },
        "when": "key-code.active && atEndOfWord && textInputFocus && !hasOtherSuggestions && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
      },
      {
        "key": "tab",
        "command": "key-code.keybind",
        "args": {
          "key": "tab",
          "command": "insertNextSuggestion"
        },
        "when": "key-code.active && hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
      },
      {
        "key": "shift+tab",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+tab",
          "command": "insertPrevSuggestion"
        },
        "when": "key-code.active && hasOtherSuggestions && textInputFocus && !inSnippetMode && !suggestWidgetVisible && config.editor.tabCompletion == 'on'"
      },
      {
        "key": "ctrl+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+pagedown",
          "command": "selectNextPageSuggestion"
        },
        "when": "key-code.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "pagedown",
          "command": "selectNextPageSuggestion"
        },
        "when": "key-code.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "selectNextSuggestion"
        },
        "when": "key-code.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "selectNextSuggestion"
        },
        "when": "key-code.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+pageup",
          "command": "selectPrevPageSuggestion"
        },
        "when": "key-code.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "pageup",
          "command": "selectPrevPageSuggestion"
        },
        "when": "key-code.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+up",
          "command": "selectPrevSuggestion"
        },
        "when": "key-code.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "selectPrevSuggestion"
        },
        "when": "key-code.active && suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+i",
          "command": "toggleSuggestionDetails"
        },
        "when": "key-code.active && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+space",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+space",
          "command": "toggleSuggestionDetails"
        },
        "when": "key-code.active && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "ctrl+alt+space",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+space",
          "command": "toggleSuggestionFocus"
        },
        "when": "key-code.active && suggestWidgetVisible && textInputFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "acceptRenameInput"
        },
        "when": "key-code.active && editorFocus && renameInputVisible"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "acceptRenameInputWithPreview"
        },
        "when": "key-code.active && config.editor.rename.enablePreview && editorFocus && renameInputVisible"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "cancelLinkedEditingInput"
        },
        "when": "key-code.active && LinkedEditingInputVisible && editorTextFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "cancelLinkedEditingInput"
        },
        "when": "key-code.active && LinkedEditingInputVisible && editorTextFocus"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "cancelRenameInput"
        },
        "when": "key-code.active && editorFocus && renameInputVisible"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "cancelRenameInput"
        },
        "when": "key-code.active && editorFocus && renameInputVisible"
      },
      {
        "key": "ctrl+shift+l",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+l",
          "command": "addCursorsAtSearchResults"
        },
        "when": "key-code.active && fileMatchOrMatchFocus && searchViewletVisible"
      },
      {
        "key": "ctrl+shift+;",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+;",
          "command": "breadcrumbs.focus"
        },
        "when": "key-code.active && breadcrumbsPossible"
      },
      {
        "key": "ctrl+shift+.",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+.",
          "command": "breadcrumbs.focusAndSelect"
        },
        "when": "key-code.active && breadcrumbsPossible"
      },
      {
        "key": "ctrl+right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+right",
          "command": "breadcrumbs.focusNext"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "right",
        "command": "key-code.keybind",
        "args": {
          "key": "right",
          "command": "breadcrumbs.focusNext"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+left",
          "command": "breadcrumbs.focusPrevious"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "breadcrumbs.focusPrevious"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "breadcrumbs.revealFocused"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "space",
        "command": "key-code.keybind",
        "args": {
          "key": "space",
          "command": "breadcrumbs.revealFocused"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "breadcrumbs.revealFocusedFromTreeAside"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "breadcrumbs.selectFocused"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "breadcrumbs.selectFocused"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+shift+.",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+.",
          "command": "breadcrumbs.toggleToOn"
        },
        "when": "key-code.active && !config.breadcrumbs.enabled"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "closeAccessibilityHelp"
        },
        "when": "key-code.active && accessibilityHelpWidgetVisible && editorFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeAccessibilityHelp"
        },
        "when": "key-code.active && accessibilityHelpWidgetVisible && editorFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeReplaceInFilesWidget"
        },
        "when": "key-code.active && replaceInputBoxFocus && searchViewletVisible"
      },
      {
        "key": "shift+alt+c",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+c",
          "command": "copyFilePath"
        },
        "when": "key-code.active && !editorFocus"
      },
      {
        "key": "ctrl+k ctrl+shift+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+shift+c",
          "command": "copyRelativeFilePath"
        },
        "when": "key-code.active && !editorFocus"
      },
      {
        "key": "alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+enter",
          "command": "debug.openBreakpointToSide"
        },
        "when": "key-code.active && breakpointsFocused"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "debug.openBreakpointToSide"
        },
        "when": "key-code.active && breakpointsFocused"
      },
      {
        "key": "ctrl+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f5",
          "command": "debug.openView"
        },
        "when": "key-code.active && !debuggersAvailable"
      },
      {
        "key": "f5",
        "command": "key-code.keybind",
        "args": {
          "key": "f5",
          "command": "debug.openView"
        },
        "when": "key-code.active && !debuggersAvailable"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "debug.removeBreakpoint"
        },
        "when": "key-code.active && breakpointsFocused && !breakpointInputFocused"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "debug.removeWatchExpression"
        },
        "when": "key-code.active && watchExpressionsFocused && !expressionSelected"
      },
      {
        "key": "alt+-",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+-",
          "command": "decreaseSearchEditorContextLines"
        },
        "when": "key-code.active && inSearchEditor"
      },
      {
        "key": "tab",
        "command": "key-code.keybind",
        "args": {
          "key": "tab",
          "command": "editor.action.inlineSuggest.commit"
        },
        "when": "key-code.active && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editorTabMovesFocus"
      },
      {
        "key": "shift+f9",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f9",
          "command": "editor.debug.action.toggleInlineBreakpoint"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "editor.refocusCallHierarchy"
        },
        "when": "key-code.active && callHierarchyVisible"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "editor.refocusTypeHierarchy"
        },
        "when": "key-code.active && typeHierarchyVisible"
      },
      {
        "key": "shift+alt+h",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+h",
          "command": "editor.showCallHierarchy"
        },
        "when": "key-code.active && editorHasCallHierarchyProvider && editorTextFocus && !inReferenceSearchEditor"
      },
      {
        "key": "shift+alt+h",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+h",
          "command": "editor.showIncomingCalls"
        },
        "when": "key-code.active && callHierarchyVisible && callHierarchyDirection == 'outgoingCalls'"
      },
      {
        "key": "shift+alt+h",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+h",
          "command": "editor.showOutgoingCalls"
        },
        "when": "key-code.active && callHierarchyVisible && callHierarchyDirection == 'incomingCalls'"
      },
      {
        "key": "shift+alt+h",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+h",
          "command": "editor.showSubtypes"
        },
        "when": "key-code.active && typeHierarchyVisible && typeHierarchyDirection == 'supertypes'"
      },
      {
        "key": "shift+alt+h",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+h",
          "command": "editor.showSupertypes"
        },
        "when": "key-code.active && typeHierarchyVisible && typeHierarchyDirection == 'subtypes'"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "explorer.openToSide"
        },
        "when": "key-code.active && explorerViewletFocus && explorerViewletVisible && !inputFocus"
      },
      {
        "key": "shift+alt+f",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f",
          "command": "filesExplorer.findInFolder"
        },
        "when": "key-code.active && explorerResourceIsFolder && explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+down",
          "command": "history.showNext"
        },
        "when": "key-code.active && historyNavigationForwardsEnabled && historyNavigationWidget && !suggestWidgetVisible"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "history.showNext"
        },
        "when": "key-code.active && historyNavigationForwardsEnabled && historyNavigationWidget && !suggestWidgetVisible"
      },
      {
        "key": "alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+up",
          "command": "history.showPrevious"
        },
        "when": "key-code.active && historyNavigationBackwardsEnabled && historyNavigationWidget && !suggestWidgetVisible"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "history.showPrevious"
        },
        "when": "key-code.active && historyNavigationBackwardsEnabled && historyNavigationWidget && !suggestWidgetVisible"
      },
      {
        "key": "alt+=",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+=",
          "command": "increaseSearchEditorContextLines"
        },
        "when": "key-code.active && inSearchEditor"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "interactive.history.next"
        },
        "when": "key-code.active && !suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'none' && interactiveInputCursorAtBoundary != 'top'"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "interactive.history.previous"
        },
        "when": "key-code.active && !suggestWidgetVisible && resourceScheme == 'vscode-interactive' && interactiveInputCursorAtBoundary != 'bottom' && interactiveInputCursorAtBoundary != 'none'"
      },
      {
        "key": "ctrl+end",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+end",
          "command": "interactive.scrollToBottom"
        },
        "when": "key-code.active && resourceScheme == 'vscode-interactive'"
      },
      {
        "key": "ctrl+home",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+home",
          "command": "interactive.scrollToTop"
        },
        "when": "key-code.active && resourceScheme == 'vscode-interactive'"
      },
      {
        "key": "ctrl+k ctrl+a",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+a",
          "command": "keybindings.editor.addKeybinding"
        },
        "when": "key-code.active && inKeybindings && keybindingFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "keybindings.editor.clearSearchResults"
        },
        "when": "key-code.active && inKeybindings && inKeybindingsSearch"
      },
      {
        "key": "ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+c",
          "command": "keybindings.editor.copyKeybindingEntry"
        },
        "when": "key-code.active && inKeybindings && keybindingFocus && !whenFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "keybindings.editor.defineKeybinding"
        },
        "when": "key-code.active && inKeybindings && keybindingFocus"
      },
      {
        "key": "ctrl+k ctrl+e",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+e",
          "command": "keybindings.editor.defineWhenExpression"
        },
        "when": "key-code.active && inKeybindings && keybindingFocus"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "keybindings.editor.focusKeybindings"
        },
        "when": "key-code.active && inKeybindings && inKeybindingsSearch"
      },
      {
        "key": "alt+k",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+k",
          "command": "keybindings.editor.recordSearchKeys"
        },
        "when": "key-code.active && inKeybindings && inKeybindingsSearch"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "keybindings.editor.removeKeybinding"
        },
        "when": "key-code.active && inKeybindings && keybindingFocus && !inputFocus"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "keybindings.editor.searchKeybindings"
        },
        "when": "key-code.active && inKeybindings"
      },
      {
        "key": "alt+p",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+p",
          "command": "keybindings.editor.toggleSortByPrecedence"
        },
        "when": "key-code.active && inKeybindings"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "list.clear"
        },
        "when": "key-code.active && listFocus && listHasSelectionOrFocus && !inputFocus"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "list.collapse"
        },
        "when": "key-code.active && listFocus && treeElementCanCollapse && !inputFocus || listFocus && treeElementHasParent && !inputFocus"
      },
      {
        "key": "ctrl+left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+left",
          "command": "list.collapseAll"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "right",
        "command": "key-code.keybind",
        "args": {
          "key": "right",
          "command": "list.expand"
        },
        "when": "key-code.active && listFocus && treeElementCanExpand && !inputFocus || listFocus && treeElementHasChild && !inputFocus"
      },
      {
        "key": "shift+down",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+down",
          "command": "list.expandSelectionDown"
        },
        "when": "key-code.active && listFocus && listSupportsMultiselect && !inputFocus"
      },
      {
        "key": "shift+up",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+up",
          "command": "list.expandSelectionUp"
        },
        "when": "key-code.active && listFocus && listSupportsMultiselect && !inputFocus"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "list.focusDown"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "home",
        "command": "key-code.keybind",
        "args": {
          "key": "home",
          "command": "list.focusFirst"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "end",
        "command": "key-code.keybind",
        "args": {
          "key": "end",
          "command": "list.focusLast"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "pagedown",
          "command": "list.focusPageDown"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "pageup",
          "command": "list.focusPageUp"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "list.focusUp"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "list.scrollDown"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "ctrl+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+up",
          "command": "list.scrollUp"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "list.select"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "ctrl+a",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+a",
          "command": "list.selectAll"
        },
        "when": "key-code.active && listFocus && listSupportsMultiselect && !inputFocus"
      },
      {
        "key": "space",
        "command": "key-code.keybind",
        "args": {
          "key": "space",
          "command": "list.toggleExpand"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "ctrl+shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+enter",
          "command": "list.toggleSelection"
        },
        "when": "key-code.active && listFocus && !inputFocus"
      },
      {
        "key": "y",
        "command": "key-code.keybind",
        "args": {
          "key": "y",
          "command": "notebook.cell.changeToCode"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'markup'"
      },
      {
        "key": "m",
        "command": "key-code.keybind",
        "args": {
          "key": "m",
          "command": "notebook.cell.changeToMarkdown"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook' && notebookCellType == 'code'"
      },
      {
        "key": "alt+delete",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+delete",
          "command": "notebook.cell.clearOutputs"
        },
        "when": "key-code.active && notebookCellEditable && notebookCellHasOutputs && notebookEditable && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "ctrl+k ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+c",
          "command": "notebook.cell.collapseCellInput"
        },
        "when": "key-code.active && notebookCellListFocused && !inputFocus && !notebookCellInputIsCollapsed"
      },
      {
        "key": "ctrl+k t",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k t",
          "command": "notebook.cell.collapseCellOutput"
        },
        "when": "key-code.active && notebookCellHasOutputs && notebookCellListFocused && !inputFocus && !notebookCellOutputIsCollapsed"
      },
      {
        "key": "shift+alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+down",
          "command": "notebook.cell.copyDown"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "shift+alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+up",
          "command": "notebook.cell.copyUp"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "notebook.cell.delete"
        },
        "when": "key-code.active && notebookEditable && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "notebook.cell.edit"
        },
        "when": "key-code.active && notebookCellListFocused && notebookEditable && !inputFocus"
      },
      {
        "key": "ctrl+k ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+c",
          "command": "notebook.cell.expandCellInput"
        },
        "when": "key-code.active && notebookCellInputIsCollapsed && notebookCellListFocused"
      },
      {
        "key": "ctrl+k t",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k t",
          "command": "notebook.cell.expandCellOutput"
        },
        "when": "key-code.active && notebookCellListFocused && notebookCellOutputIsCollapsed"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "notebook.cell.focusInOutput"
        },
        "when": "key-code.active && notebookCellHasOutputs && notebookEditorFocused"
      },
      {
        "key": "ctrl+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+up",
          "command": "notebook.cell.focusOutOutput"
        },
        "when": "key-code.active && notebookEditorFocused"
      },
      {
        "key": "ctrl+shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+enter",
          "command": "notebook.cell.insertCodeCellAbove"
        },
        "when": "key-code.active && notebookCellListFocused && !inputFocus"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "notebook.cell.insertCodeCellBelow"
        },
        "when": "key-code.active && notebookCellListFocused && !inputFocus"
      },
      {
        "key": "shift+alt+win+j",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+win+j",
          "command": "notebook.cell.joinAbove"
        },
        "when": "key-code.active && notebookEditorFocused"
      },
      {
        "key": "alt+win+j",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+win+j",
          "command": "notebook.cell.joinBelow"
        },
        "when": "key-code.active && notebookEditorFocused"
      },
      {
        "key": "alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+down",
          "command": "notebook.cell.moveDown"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+up",
          "command": "notebook.cell.moveUp"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+shift+\\",
          "command": "notebook.cell.split"
        },
        "when": "key-code.active && notebookCellEditable && notebookEditable && notebookEditorFocused"
      },
      {
        "key": "ctrl+l",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+l",
          "command": "notebook.centerActiveCell"
        },
        "when": "key-code.active && notebookEditorFocused"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "notebook.find"
        },
        "when": "key-code.active && notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "ctrl+end",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+end",
          "command": "notebook.focusBottom"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "notebook.focusNextEditor"
        },
        "when": "key-code.active && notebookEditorFocused && notebookOutputFocused"
      },
      {
        "key": "ctrl+home",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+home",
          "command": "notebook.focusTop"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "notebook.fold"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "ctrl+shift+[",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+[",
          "command": "notebook.fold"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "shift+alt+f",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f",
          "command": "notebook.format"
        },
        "when": "key-code.active && notebookEditable && !editorTextFocus && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "notebook.hideFind"
        },
        "when": "key-code.active && notebookEditorFocused && notebookFindWidgetFocused"
      },
      {
        "key": "right",
        "command": "key-code.keybind",
        "args": {
          "key": "right",
          "command": "notebook.unfold"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "ctrl+shift+]",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+]",
          "command": "notebook.unfold"
        },
        "when": "key-code.active && notebookEditorFocused && !inputFocus && activeEditor == 'workbench.editor.notebook'"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "notification.clear"
        },
        "when": "key-code.active && notificationFocus"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "notification.collapse"
        },
        "when": "key-code.active && notificationFocus"
      },
      {
        "key": "right",
        "command": "key-code.keybind",
        "args": {
          "key": "right",
          "command": "notification.expand"
        },
        "when": "key-code.active && notificationFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "notification.toggle"
        },
        "when": "key-code.active && notificationFocus"
      },
      {
        "key": "space",
        "command": "key-code.keybind",
        "args": {
          "key": "space",
          "command": "notification.toggle"
        },
        "when": "key-code.active && notificationFocus"
      },
      {
        "key": "home",
        "command": "key-code.keybind",
        "args": {
          "key": "home",
          "command": "notifications.focusFirstToast"
        },
        "when": "key-code.active && notificationFocus && notificationToastsVisible"
      },
      {
        "key": "pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "pageup",
          "command": "notifications.focusFirstToast"
        },
        "when": "key-code.active && notificationFocus && notificationToastsVisible"
      },
      {
        "key": "end",
        "command": "key-code.keybind",
        "args": {
          "key": "end",
          "command": "notifications.focusLastToast"
        },
        "when": "key-code.active && notificationFocus && notificationToastsVisible"
      },
      {
        "key": "pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "pagedown",
          "command": "notifications.focusLastToast"
        },
        "when": "key-code.active && notificationFocus && notificationToastsVisible"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "notifications.focusNextToast"
        },
        "when": "key-code.active && notificationFocus && notificationToastsVisible"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "notifications.focusPreviousToast"
        },
        "when": "key-code.active && notificationFocus && notificationToastsVisible"
      },
      {
        "key": "ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+c",
          "command": "problems.action.copy"
        },
        "when": "key-code.active && problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "problems.action.focusFilter"
        },
        "when": "key-code.active && focusedView == 'workbench.panel.markers.view'"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "problems.action.focusProblemsFromFilter"
        },
        "when": "key-code.active && problemsFilterFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "problems.action.open"
        },
        "when": "key-code.active && problemFocus"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "problems.action.openToSide"
        },
        "when": "key-code.active && problemFocus"
      },
      {
        "key": "ctrl+.",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+.",
          "command": "problems.action.showQuickFixes"
        },
        "when": "key-code.active && problemFocus"
      },
      {
        "key": "space",
        "command": "key-code.keybind",
        "args": {
          "key": "space",
          "command": "refactorPreview.toggleCheckedState"
        },
        "when": "key-code.active && listFocus && refactorPreview.enabled && !inputFocus"
      },
      {
        "key": "shift+alt+r",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+r",
          "command": "revealFileInOS"
        },
        "when": "key-code.active && !editorFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "revealReference"
        },
        "when": "key-code.active && listFocus && referenceSearchVisible && !inputFocus && !treeElementCanCollapse && !treeElementCanExpand"
      },
      {
        "key": "ctrl+k s",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k s",
          "command": "saveAll"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "scm.acceptInput"
        },
        "when": "key-code.active && scmRepository"
      },
      {
        "key": "alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+down",
          "command": "scm.forceViewNextCommit"
        },
        "when": "key-code.active && scmRepository"
      },
      {
        "key": "alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+up",
          "command": "scm.forceViewPreviousCommit"
        },
        "when": "key-code.active && scmRepository"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "scm.viewNextCommit"
        },
        "when": "key-code.active && scmInputIsInLastPosition && scmRepository && !suggestWidgetVisible"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "scm.viewPreviousCommit"
        },
        "when": "key-code.active && scmInputIsInFirstPosition && scmRepository && !suggestWidgetVisible"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "search.action.cancel"
        },
        "when": "key-code.active && listFocus && searchViewletVisible && !inputFocus && searchState != '0'"
      },
      {
        "key": "ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+c",
          "command": "search.action.copyMatch"
        },
        "when": "key-code.active && fileMatchOrMatchFocus"
      },
      {
        "key": "shift+alt+c",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+c",
          "command": "search.action.copyPath"
        },
        "when": "key-code.active && fileMatchOrFolderMatchWithResourceFocus"
      },
      {
        "key": "f4",
        "command": "key-code.keybind",
        "args": {
          "key": "f4",
          "command": "search.action.focusNextSearchResult"
        },
        "when": "key-code.active && hasSearchResult || inSearchEditor"
      },
      {
        "key": "shift+f4",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f4",
          "command": "search.action.focusPreviousSearchResult"
        },
        "when": "key-code.active && hasSearchResult || inSearchEditor"
      },
      {
        "key": "ctrl+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+up",
          "command": "search.action.focusSearchFromResults"
        },
        "when": "key-code.active && firstMatchFocus && searchViewletVisible"
      },
      {
        "key": "alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+enter",
          "command": "search.action.openInEditor"
        },
        "when": "key-code.active && hasSearchResult && searchViewletFocus"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "search.action.openResult"
        },
        "when": "key-code.active && fileMatchOrMatchFocus && searchViewletVisible"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "search.action.openResultToSide"
        },
        "when": "key-code.active && fileMatchOrMatchFocus && searchViewletVisible"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "search.action.remove"
        },
        "when": "key-code.active && fileMatchOrMatchFocus && searchViewletVisible"
      },
      {
        "key": "ctrl+shift+1",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+1",
          "command": "search.action.replace"
        },
        "when": "key-code.active && matchFocus && replaceActive && searchViewletVisible"
      },
      {
        "key": "ctrl+alt+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+enter",
          "command": "search.action.replaceAll"
        },
        "when": "key-code.active && replaceActive && searchViewletVisible && !findWidgetVisible"
      },
      {
        "key": "ctrl+shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+enter",
          "command": "search.action.replaceAllInFile"
        },
        "when": "key-code.active && fileMatchFocus && replaceActive && searchViewletVisible"
      },
      {
        "key": "ctrl+shift+1",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+1",
          "command": "search.action.replaceAllInFile"
        },
        "when": "key-code.active && fileMatchFocus && replaceActive && searchViewletVisible"
      },
      {
        "key": "ctrl+shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+enter",
          "command": "search.action.replaceAllInFolder"
        },
        "when": "key-code.active && folderMatchFocus && replaceActive && searchViewletVisible"
      },
      {
        "key": "ctrl+shift+1",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+1",
          "command": "search.action.replaceAllInFolder"
        },
        "when": "key-code.active && folderMatchFocus && replaceActive && searchViewletVisible"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "search.focus.nextInputBox"
        },
        "when": "key-code.active && inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible"
      },
      {
        "key": "ctrl+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+up",
          "command": "search.focus.previousInputBox"
        },
        "when": "key-code.active && inSearchEditor && inputBoxFocus || inputBoxFocus && searchViewletVisible && !searchInputBoxFocus"
      },
      {
        "key": "ctrl+shift+l",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+l",
          "command": "selectAllSearchEditorMatches"
        },
        "when": "key-code.active && inSearchEditor"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "settings.action.focusLevelUp"
        },
        "when": "key-code.active && inSettingsEditor && !inSettingsJSONEditor && !inSettingsSearch"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "settings.action.focusSettingControl"
        },
        "when": "key-code.active && settingRowFocus"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "settings.action.focusSettingsFromSearch"
        },
        "when": "key-code.active && inSettingsSearch && !suggestWidgetVisible"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "settings.action.focusSettingsList"
        },
        "when": "key-code.active && inSettingsEditor && settingsTocRowFocus"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "settings.action.focusTOC"
        },
        "when": "key-code.active && inSettingsEditor && settingRowFocus"
      },
      {
        "key": "shift+f9",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f9",
          "command": "settings.action.showContextMenu"
        },
        "when": "key-code.active && inSettingsEditor"
      },
      {
        "key": "ctrl+; ctrl+x",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; ctrl+x",
          "command": "testing.cancelRun"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+; ctrl+a",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; ctrl+a",
          "command": "testing.debugAll"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+; ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; ctrl+c",
          "command": "testing.debugAtCursor"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+; ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; ctrl+f",
          "command": "testing.debugCurrentFile"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+; ctrl+e",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; ctrl+e",
          "command": "testing.debugFailTests"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+; ctrl+l",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; ctrl+l",
          "command": "testing.debugLastRun"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+; m",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; m",
          "command": "testing.openOutputPeek"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+; e",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; e",
          "command": "testing.reRunFailTests"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+; l",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; l",
          "command": "testing.reRunLastRun"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+; r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; r",
          "command": "testing.refreshTests"
        },
        "when": "key-code.active && testing.canRefresh"
      },
      {
        "key": "ctrl+; a",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; a",
          "command": "testing.runAll"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+; c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; c",
          "command": "testing.runAtCursor"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+; f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; f",
          "command": "testing.runCurrentFile"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+; ctrl+o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; ctrl+o",
          "command": "testing.showMostRecentOutput"
        },
        "when": "key-code.active && testing.hasAnyResults"
      },
      {
        "key": "ctrl+; ctrl+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+; ctrl+i",
          "command": "testing.toggleInlineTestOutput"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+h",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+h",
          "command": "testing.toggleTestingPeekHistory"
        },
        "when": "key-code.active && testing.isPeekVisible"
      },
      {
        "key": "alt+c",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+c",
          "command": "toggleSearchCaseSensitive"
        },
        "when": "key-code.active && searchViewletFocus"
      },
      {
        "key": "alt+c",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+c",
          "command": "toggleSearchEditorCaseSensitive"
        },
        "when": "key-code.active && inSearchEditor && searchInputBoxFocus"
      },
      {
        "key": "alt+l",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+l",
          "command": "toggleSearchEditorContextLines"
        },
        "when": "key-code.active && inSearchEditor"
      },
      {
        "key": "alt+r",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+r",
          "command": "toggleSearchEditorRegex"
        },
        "when": "key-code.active && inSearchEditor && searchInputBoxFocus"
      },
      {
        "key": "alt+w",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+w",
          "command": "toggleSearchEditorWholeWord"
        },
        "when": "key-code.active && inSearchEditor && searchInputBoxFocus"
      },
      {
        "key": "alt+p",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+p",
          "command": "toggleSearchPreserveCase"
        },
        "when": "key-code.active && searchViewletFocus"
      },
      {
        "key": "alt+r",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+r",
          "command": "toggleSearchRegex"
        },
        "when": "key-code.active && searchViewletFocus"
      },
      {
        "key": "alt+w",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+w",
          "command": "toggleSearchWholeWord"
        },
        "when": "key-code.active && searchViewletFocus"
      },
      {
        "key": "ctrl+alt+win+n",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+win+n",
          "command": "welcome.showNewFileEntries"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+w",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+w",
          "command": "workbench.action.closeActiveEditor"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+f4",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f4",
          "command": "workbench.action.closeActiveEditor"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+w",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+w",
          "command": "workbench.action.closeAllEditors"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+shift+w",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+shift+w",
          "command": "workbench.action.closeAllGroups"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k w",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k w",
          "command": "workbench.action.closeEditorsInGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k f",
          "command": "workbench.action.closeFolder"
        },
        "when": "key-code.active && emptyWorkspaceSupport && workbenchState != 'empty'"
      },
      {
        "key": "ctrl+w",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+w",
          "command": "workbench.action.closeGroup"
        },
        "when": "key-code.active && activeEditorGroupEmpty && multipleEditorGroups"
      },
      {
        "key": "ctrl+f4",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f4",
          "command": "workbench.action.closeGroup"
        },
        "when": "key-code.active && activeEditorGroupEmpty && multipleEditorGroups"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "workbench.action.closeQuickOpen"
        },
        "when": "key-code.active && inQuickOpen"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "workbench.action.closeQuickOpen"
        },
        "when": "key-code.active && inQuickOpen"
      },
      {
        "key": "ctrl+k u",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k u",
          "command": "workbench.action.closeUnmodifiedEditors"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+w",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+w",
          "command": "workbench.action.closeWindow"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+f4",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+f4",
          "command": "workbench.action.closeWindow"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+f5",
          "command": "workbench.action.compareEditor.nextChange"
        },
        "when": "key-code.active && textCompareEditorVisible"
      },
      {
        "key": "shift+alt+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f5",
          "command": "workbench.action.compareEditor.previousChange"
        },
        "when": "key-code.active && textCompareEditorVisible"
      },
      {
        "key": "shift+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f5",
          "command": "workbench.action.debug.disconnect"
        },
        "when": "key-code.active && focusedSessionIsAttach && inDebugMode"
      },
      {
        "key": "ctrl+shift+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+f5",
          "command": "workbench.action.debug.restart"
        },
        "when": "key-code.active && inDebugMode"
      },
      {
        "key": "ctrl+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f5",
          "command": "workbench.action.debug.run"
        },
        "when": "key-code.active && debuggersAvailable && debugState != 'initializing'"
      },
      {
        "key": "f5",
        "command": "key-code.keybind",
        "args": {
          "key": "f5",
          "command": "workbench.action.debug.start"
        },
        "when": "key-code.active && debuggersAvailable && debugState == 'inactive'"
      },
      {
        "key": "shift+f11",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f11",
          "command": "workbench.action.debug.stepOut"
        },
        "when": "key-code.active && debugState == 'stopped'"
      },
      {
        "key": "f10",
        "command": "key-code.keybind",
        "args": {
          "key": "f10",
          "command": "workbench.action.debug.stepOver"
        },
        "when": "key-code.active && debugState == 'stopped'"
      },
      {
        "key": "shift+f5",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f5",
          "command": "workbench.action.debug.stop"
        },
        "when": "key-code.active && inDebugMode && !focusedSessionIsAttach"
      },
      {
        "key": "ctrl+k m",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k m",
          "command": "workbench.action.editor.changeLanguageMode"
        },
        "when": "key-code.active && !notebookEditorFocused"
      },
      {
        "key": "ctrl+k p",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k p",
          "command": "workbench.action.files.copyPathOfActiveFile"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+n",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+n",
          "command": "workbench.action.files.newUntitledFile"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+o",
          "command": "workbench.action.files.openFile"
        },
        "when": "key-code.active && true"
      },
      {
        "key": "ctrl+o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+o",
          "command": "workbench.action.files.openFileFolder"
        },
        "when": "key-code.active && isMacNative && openFolderWorkspaceSupport"
      },
      {
        "key": "ctrl+k ctrl+o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+o",
          "command": "workbench.action.files.openFolder"
        },
        "when": "key-code.active && openFolderWorkspaceSupport"
      },
      {
        "key": "ctrl+o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+o",
          "command": "workbench.action.files.openFolderViaWorkspace"
        },
        "when": "key-code.active && !openFolderWorkspaceSupport && workbenchState == 'workspace'"
      },
      {
        "key": "ctrl+o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+o",
          "command": "workbench.action.files.openLocalFile"
        },
        "when": "key-code.active && remoteFileDialogVisible"
      },
      {
        "key": "ctrl+k ctrl+o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+o",
          "command": "workbench.action.files.openLocalFolder"
        },
        "when": "key-code.active && remoteFileDialogVisible"
      },
      {
        "key": "ctrl+k r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k r",
          "command": "workbench.action.files.revealActiveFileInWindows"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+s",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+s",
          "command": "workbench.action.files.save"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+s",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+s",
          "command": "workbench.action.files.saveAs"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+s",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+s",
          "command": "workbench.action.files.saveLocalFile"
        },
        "when": "key-code.active && remoteFileDialogVisible"
      },
      {
        "key": "ctrl+k ctrl+shift+s",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+shift+s",
          "command": "workbench.action.files.saveWithoutFormatting"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k o",
          "command": "workbench.action.files.showOpenedFileInNewWindow"
        },
        "when": "key-code.active && emptyWorkspaceSupport"
      },
      {
        "key": "ctrl+shift+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+f",
          "command": "workbench.action.findInFiles"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+up",
          "command": "workbench.action.focusAboveGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+down",
          "command": "workbench.action.focusBelowGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+8",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+8",
          "command": "workbench.action.focusEighthEditorGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+5",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+5",
          "command": "workbench.action.focusFifthEditorGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+1",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+1",
          "command": "workbench.action.focusFirstEditorGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+4",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+4",
          "command": "workbench.action.focusFourthEditorGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+left",
          "command": "workbench.action.focusLeftGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "f6",
        "command": "key-code.keybind",
        "args": {
          "key": "f6",
          "command": "workbench.action.focusNextPart"
        },
        "when": "key-code.active"
      },
      {
        "key": "shift+f6",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f6",
          "command": "workbench.action.focusPreviousPart"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+right",
          "command": "workbench.action.focusRightGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+2",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+2",
          "command": "workbench.action.focusSecondEditorGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+7",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+7",
          "command": "workbench.action.focusSeventhEditorGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+0",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+0",
          "command": "workbench.action.focusSideBar"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+6",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+6",
          "command": "workbench.action.focusSixthEditorGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+3",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+3",
          "command": "workbench.action.focusThirdEditorGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+g",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+g",
          "command": "workbench.action.gotoLine"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+o",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+o",
          "command": "workbench.action.gotoSymbol"
        },
        "when": "key-code.active"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "workbench.action.hideInterfaceOverview"
        },
        "when": "key-code.active && interfaceOverviewVisible"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "workbench.action.interactivePlayground.arrowDown"
        },
        "when": "key-code.active && interactivePlaygroundFocus && !editorTextFocus"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "workbench.action.interactivePlayground.arrowUp"
        },
        "when": "key-code.active && interactivePlaygroundFocus && !editorTextFocus"
      },
      {
        "key": "pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "pagedown",
          "command": "workbench.action.interactivePlayground.pageDown"
        },
        "when": "key-code.active && interactivePlaygroundFocus && !editorTextFocus"
      },
      {
        "key": "pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "pageup",
          "command": "workbench.action.interactivePlayground.pageUp"
        },
        "when": "key-code.active && interactivePlaygroundFocus && !editorTextFocus"
      },
      {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+shift+\\",
          "command": "workbench.action.joinEditorInGroup"
        },
        "when": "key-code.active && sideBySideEditorActive"
      },
      {
        "key": "ctrl+k enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k enter",
          "command": "workbench.action.keepEditor"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+r",
          "command": "workbench.action.keybindingsReference"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+9",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+9",
          "command": "workbench.action.lastEditorInGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+0",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+0",
          "command": "workbench.action.lastEditorInGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k down",
          "command": "workbench.action.moveActiveEditorGroupDown"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k left",
          "command": "workbench.action.moveActiveEditorGroupLeft"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k right",
          "command": "workbench.action.moveActiveEditorGroupRight"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k up",
          "command": "workbench.action.moveActiveEditorGroupUp"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+pageup",
          "command": "workbench.action.moveEditorLeftInGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+pagedown",
          "command": "workbench.action.moveEditorRightInGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "shift+alt+1",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+1",
          "command": "workbench.action.moveEditorToFirstGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "shift+alt+9",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+9",
          "command": "workbench.action.moveEditorToLastGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+alt+right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+right",
          "command": "workbench.action.moveEditorToNextGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+alt+left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+left",
          "command": "workbench.action.moveEditorToPreviousGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+left",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+left",
          "command": "workbench.action.navigateBack"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+right",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+right",
          "command": "workbench.action.navigateForward"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+q",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+q",
          "command": "workbench.action.navigateToLastEditLocation"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+n",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+n",
          "command": "workbench.action.newWindow"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+pagedown",
          "command": "workbench.action.nextEditor"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+pagedown",
          "command": "workbench.action.nextEditorInGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+1",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+1",
          "command": "workbench.action.openEditorAtIndex1"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+2",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+2",
          "command": "workbench.action.openEditorAtIndex2"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+3",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+3",
          "command": "workbench.action.openEditorAtIndex3"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+4",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+4",
          "command": "workbench.action.openEditorAtIndex4"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+5",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+5",
          "command": "workbench.action.openEditorAtIndex5"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+6",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+6",
          "command": "workbench.action.openEditorAtIndex6"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+7",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+7",
          "command": "workbench.action.openEditorAtIndex7"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+8",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+8",
          "command": "workbench.action.openEditorAtIndex8"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+9",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+9",
          "command": "workbench.action.openEditorAtIndex9"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+s",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+s",
          "command": "workbench.action.openGlobalKeybindings"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+r",
          "command": "workbench.action.openRecent"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+,",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+,",
          "command": "workbench.action.openSettings"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+u",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+u",
          "command": "workbench.action.output.toggleOutput"
        },
        "when": "key-code.active && workbench.panel.output.active"
      },
      {
        "key": "ctrl+k shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k shift+enter",
          "command": "workbench.action.pinEditor"
        },
        "when": "key-code.active && !activeEditorIsPinned"
      },
      {
        "key": "ctrl+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+pageup",
          "command": "workbench.action.previousEditor"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+pageup",
          "command": "workbench.action.previousEditorInGroup"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+e",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+e",
          "command": "workbench.action.quickOpen"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+p",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+p",
          "command": "workbench.action.quickOpen"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+tab",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+tab",
          "command": "workbench.action.quickOpenLeastRecentlyUsedEditorInGroup"
        },
        "when": "key-code.active && !activeEditorGroupEmpty"
      },
      {
        "key": "ctrl+tab",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+tab",
          "command": "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup"
        },
        "when": "key-code.active && !activeEditorGroupEmpty"
      },
      {
        "key": "ctrl+q",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+q",
          "command": "workbench.action.quickOpenView"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+t",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+t",
          "command": "workbench.action.reopenClosedEditor"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+h",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+h",
          "command": "workbench.action.replaceInFiles"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+j",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+j",
          "command": "workbench.action.search.toggleQueryDetails"
        },
        "when": "key-code.active && inSearchEditor || searchViewletFocus"
      },
      {
        "key": "ctrl+k ctrl+t",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+t",
          "command": "workbench.action.selectTheme"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+p",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+p",
          "command": "workbench.action.showAllEditors"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+t",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+t",
          "command": "workbench.action.showAllSymbols"
        },
        "when": "key-code.active"
      },
      {
        "key": "f1",
        "command": "key-code.keybind",
        "args": {
          "key": "f1",
          "command": "workbench.action.showCommands"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+p",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+p",
          "command": "workbench.action.showCommands"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+i",
          "command": "workbench.action.showTreeHover"
        },
        "when": "key-code.active && customTreeView && listFocus && !inputFocus"
      },
      {
        "key": "ctrl+\\",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+\\",
          "command": "workbench.action.splitEditor"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k ctrl+shift+\\",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+shift+\\",
          "command": "workbench.action.splitEditorInGroup"
        },
        "when": "key-code.active && activeEditorCanSplitInGroup"
      },
      {
        "key": "ctrl+k ctrl+\\",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+\\",
          "command": "workbench.action.splitEditorOrthogonal"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+b",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+b",
          "command": "workbench.action.tasks.build"
        },
        "when": "key-code.active"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "workbench.action.terminal.clearSelection"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && terminalTextSelected && !terminalFindVisible || terminalFocus && terminalProcessSupported && terminalTextSelected && !terminalFindVisible"
      },
      {
        "key": "ctrl+shift+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+c",
          "command": "workbench.action.terminal.copySelection"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
      },
      {
        "key": "ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+c",
          "command": "workbench.action.terminal.copySelection"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected"
      },
      {
        "key": "f3",
        "command": "key-code.keybind",
        "args": {
          "key": "f3",
          "command": "workbench.action.terminal.findNext"
        },
        "when": "key-code.active && terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+enter",
          "command": "workbench.action.terminal.findNext"
        },
        "when": "key-code.active && terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
      },
      {
        "key": "shift+f3",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f3",
          "command": "workbench.action.terminal.findPrevious"
        },
        "when": "key-code.active && terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "workbench.action.terminal.findPrevious"
        },
        "when": "key-code.active && terminalFindInputFocused && terminalHasBeenCreated || terminalFindInputFocused && terminalProcessSupported"
      },
      {
        "key": "ctrl+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f",
          "command": "workbench.action.terminal.focusFind"
        },
        "when": "key-code.active && terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+pagedown",
          "command": "workbench.action.terminal.focusNext"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
      },
      {
        "key": "alt+down",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+down",
          "command": "workbench.action.terminal.focusNextPane"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "alt+right",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+right",
          "command": "workbench.action.terminal.focusNextPane"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+pageup",
          "command": "workbench.action.terminal.focusPrevious"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
      },
      {
        "key": "alt+up",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+up",
          "command": "workbench.action.terminal.focusPreviousPane"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "alt+left",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+left",
          "command": "workbench.action.terminal.focusPreviousPane"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+shift+\\",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+\\",
          "command": "workbench.action.terminal.focusTabs"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported || terminalHasBeenCreated && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "workbench.action.terminal.hideFind"
        },
        "when": "key-code.active && terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "workbench.action.terminal.hideFind"
        },
        "when": "key-code.active && terminalFindVisible && terminalFocus && terminalHasBeenCreated || terminalFindVisible && terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+w",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+w",
          "command": "workbench.action.terminal.killEditor"
        },
        "when": "key-code.active && terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
      },
      {
        "key": "ctrl+f4",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+f4",
          "command": "workbench.action.terminal.killEditor"
        },
        "when": "key-code.active && terminalEditorFocus && terminalFocus && terminalHasBeenCreated && resourceScheme == 'vscode-terminal' || terminalEditorFocus && terminalFocus && terminalProcessSupported && resourceScheme == 'vscode-terminal'"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "workbench.action.terminal.killInstance"
        },
        "when": "key-code.active && terminalHasBeenCreated && terminalTabsFocus || terminalIsOpen && terminalTabsFocus || terminalProcessSupported && terminalTabsFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "workbench.action.terminal.navigationModeExit"
        },
        "when": "key-code.active && accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+down",
          "command": "workbench.action.terminal.navigationModeFocusNext"
        },
        "when": "key-code.active && accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+up",
          "command": "workbench.action.terminal.navigationModeFocusPrevious"
        },
        "when": "key-code.active && accessibilityModeEnabled && terminalA11yTreeFocus && terminalProcessSupported || accessibilityModeEnabled && terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+shift+`",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+`",
          "command": "workbench.action.terminal.new"
        },
        "when": "key-code.active && terminalProcessSupported || terminalWebExtensionContributedProfile"
      },
      {
        "key": "ctrl+shift+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+c",
          "command": "workbench.action.terminal.openNativeConsole"
        },
        "when": "key-code.active && !terminalFocus"
      },
      {
        "key": "ctrl+shift+v",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+v",
          "command": "workbench.action.terminal.paste"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+v",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+v",
          "command": "workbench.action.terminal.paste"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "f2",
        "command": "key-code.keybind",
        "args": {
          "key": "f2",
          "command": "workbench.action.terminal.renameInstance"
        },
        "when": "key-code.active && terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
      },
      {
        "key": "ctrl+alt+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+pagedown",
          "command": "workbench.action.terminal.scrollDown"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
      },
      {
        "key": "shift+pagedown",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+pagedown",
          "command": "workbench.action.terminal.scrollDownPage"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
      },
      {
        "key": "ctrl+end",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+end",
          "command": "workbench.action.terminal.scrollToBottom"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
      },
      {
        "key": "ctrl+home",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+home",
          "command": "workbench.action.terminal.scrollToTop"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
      },
      {
        "key": "ctrl+alt+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+pageup",
          "command": "workbench.action.terminal.scrollUp"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
      },
      {
        "key": "shift+pageup",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+pageup",
          "command": "workbench.action.terminal.scrollUpPage"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && !terminalAltBufferActive || terminalFocus && terminalProcessSupported && !terminalAltBufferActive"
      },
      {
        "key": "ctrl+v",
        "command": "key-code.keybind",
        "when": "key-code.active && terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'",
        "args": {
          "key": "ctrl+v",
          "command": "key-code.keybind",
          "text": "\u0016"
        }
      },
      {
        "key": "ctrl+backspace",
        "command": "key-code.keybind",
        "when": "key-code.active && terminalFocus",
        "args": {
          "key": "ctrl+backspace",
          "command": "key-code.keybind",
          "text": "\u0017"
        }
      },
      {
        "key": "ctrl+backspace",
        "command": "key-code.keybind",
        "when": "key-code.active && terminalFocus && terminalShellType == 'cmd'",
        "args": {
          "key": "ctrl+backspace",
          "command": "key-code.keybind",
          "text": "\b"
        }
      },
      {
        "key": "ctrl+delete",
        "command": "key-code.keybind",
        "when": "key-code.active && terminalFocus",
        "args": {
          "key": "ctrl+delete",
          "command": "key-code.keybind",
          "text": "\u001bd"
        }
      },
      {
        "key": "ctrl+shift+2",
        "command": "key-code.keybind",
        "when": "key-code.active && terminalFocus",
        "args": {
          "key": "ctrl+shift+2",
          "command": "key-code.keybind",
          "text": "\u0000"
        }
      },
      {
        "key": "ctrl+shift+6",
        "command": "key-code.keybind",
        "when": "key-code.active && terminalFocus",
        "args": {
          "key": "ctrl+shift+6",
          "command": "key-code.keybind",
          "text": "\u001e"
        }
      },
      {
        "key": "ctrl+/",
        "command": "key-code.keybind",
        "when": "key-code.active && terminalFocus",
        "args": {
          "key": "ctrl+/",
          "command": "key-code.keybind",
          "text": "\u001f"
        }
      },
      {
        "key": "alt+z",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+z",
          "command": "workbench.action.terminal.sizeToContentWidth"
        },
        "when": "key-code.active && terminalFocus && terminalHasBeenCreated && terminalIsOpen || terminalFocus && terminalIsOpen && terminalProcessSupported"
      },
      {
        "key": "ctrl+shift+5",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+5",
          "command": "workbench.action.terminal.split"
        },
        "when": "key-code.active && terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
      },
      {
        "key": "ctrl+shift+5",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+5",
          "command": "workbench.action.terminal.splitInstance"
        },
        "when": "key-code.active && terminalProcessSupported && terminalTabsFocus"
      },
      {
        "key": "alt+c",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+c",
          "command": "workbench.action.terminal.toggleFindCaseSensitive"
        },
        "when": "key-code.active && terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "alt+r",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+r",
          "command": "workbench.action.terminal.toggleFindRegex"
        },
        "when": "key-code.active && terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "alt+w",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+w",
          "command": "workbench.action.terminal.toggleFindWholeWord"
        },
        "when": "key-code.active && terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
      },
      {
        "key": "ctrl+`",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+`",
          "command": "workbench.action.terminal.toggleTerminal"
        },
        "when": "key-code.active && terminal.active"
      },
      {
        "key": "shift+alt+0",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+0",
          "command": "workbench.action.toggleEditorGroupLayout"
        },
        "when": "key-code.active"
      },
      {
        "key": "f11",
        "command": "key-code.keybind",
        "args": {
          "key": "f11",
          "command": "workbench.action.toggleFullScreen"
        },
        "when": "key-code.active && !isIOS"
      },
      {
        "key": "ctrl+j",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+j",
          "command": "workbench.action.togglePanel"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+b",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+b",
          "command": "workbench.action.toggleSidebarVisibility"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k z",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k z",
          "command": "workbench.action.toggleZenMode"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k shift+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k shift+enter",
          "command": "workbench.action.unpinEditor"
        },
        "when": "key-code.active && activeEditorIsPinned"
      },
      {
        "key": "ctrl+numpad_add",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+numpad_add",
          "command": "workbench.action.zoomIn"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+=",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+=",
          "command": "workbench.action.zoomIn"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+=",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+=",
          "command": "workbench.action.zoomIn"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+numpad_subtract",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+numpad_subtract",
          "command": "workbench.action.zoomOut"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+-",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+-",
          "command": "workbench.action.zoomOut"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+-",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+-",
          "command": "workbench.action.zoomOut"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+numpad0",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+numpad0",
          "command": "workbench.action.zoomReset"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+shift+m",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+m",
          "command": "workbench.actions.view.problems"
        },
        "when": "key-code.active && workbench.panel.markers.view.active"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "workbench.banner.focusBanner"
        },
        "when": "key-code.active && bannerFocused"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "workbench.banner.focusNextAction"
        },
        "when": "key-code.active && bannerFocused"
      },
      {
        "key": "right",
        "command": "key-code.keybind",
        "args": {
          "key": "right",
          "command": "workbench.banner.focusNextAction"
        },
        "when": "key-code.active && bannerFocused"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "workbench.banner.focusPreviousAction"
        },
        "when": "key-code.active && bannerFocused"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "workbench.banner.focusPreviousAction"
        },
        "when": "key-code.active && bannerFocused"
      },
      {
        "key": "ctrl+shift+y",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+y",
          "command": "workbench.debug.action.toggleRepl"
        },
        "when": "key-code.active && workbench.panel.repl.view.active"
      },
      {
        "key": "ctrl+k c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k c",
          "command": "workbench.files.action.compareWithClipboard"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k d",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k d",
          "command": "workbench.files.action.compareWithSaved"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+k e",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k e",
          "command": "workbench.files.action.focusOpenEditorsView"
        },
        "when": "key-code.active && workbench.explorer.openEditorsView.active"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "workbench.statusBar.clearFocus"
        },
        "when": "key-code.active && statusBarFocused"
      },
      {
        "key": "home",
        "command": "key-code.keybind",
        "args": {
          "key": "home",
          "command": "workbench.statusBar.focusFirst"
        },
        "when": "key-code.active && statusBarFocused"
      },
      {
        "key": "end",
        "command": "key-code.keybind",
        "args": {
          "key": "end",
          "command": "workbench.statusBar.focusLast"
        },
        "when": "key-code.active && statusBarFocused"
      },
      {
        "key": "down",
        "command": "key-code.keybind",
        "args": {
          "key": "down",
          "command": "workbench.statusBar.focusNext"
        },
        "when": "key-code.active && statusBarFocused"
      },
      {
        "key": "right",
        "command": "key-code.keybind",
        "args": {
          "key": "right",
          "command": "workbench.statusBar.focusNext"
        },
        "when": "key-code.active && statusBarFocused"
      },
      {
        "key": "up",
        "command": "key-code.keybind",
        "args": {
          "key": "up",
          "command": "workbench.statusBar.focusPrevious"
        },
        "when": "key-code.active && statusBarFocused"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "workbench.statusBar.focusPrevious"
        },
        "when": "key-code.active && statusBarFocused"
      },
      {
        "key": "ctrl+shift+d",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+d",
          "command": "workbench.view.debug"
        },
        "when": "key-code.active && viewContainer.workbench.view.debug.enabled"
      },
      {
        "key": "ctrl+shift+e",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+e",
          "command": "workbench.view.explorer"
        },
        "when": "key-code.active && viewContainer.workbench.view.explorer.enabled"
      },
      {
        "key": "ctrl+shift+x",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+x",
          "command": "workbench.view.extensions"
        },
        "when": "key-code.active && viewContainer.workbench.view.extensions.enabled"
      },
      {
        "key": "ctrl+shift+g",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+g",
          "command": "workbench.view.scm"
        },
        "when": "key-code.active && workbench.scm.active"
      },
      {
        "key": "ctrl+shift+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+f",
          "command": "workbench.view.search"
        },
        "when": "key-code.active && workbench.view.search.active && neverMatch =~ /doesNotMatch/"
      },
      {
        "key": "ctrl+right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+right",
          "command": "breadcrumbs.focusNextWithPicker"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
      },
      {
        "key": "ctrl+left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+left",
          "command": "breadcrumbs.focusPreviousWithPicker"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible && listFocus && !inputFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "breadcrumbs.selectEditor"
        },
        "when": "key-code.active && breadcrumbsActive && breadcrumbsVisible"
      },
      {
        "key": "ctrl+k down",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k down",
          "command": "views.moveViewDown"
        },
        "when": "key-code.active && focusedView != ''"
      },
      {
        "key": "ctrl+k left",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k left",
          "command": "views.moveViewLeft"
        },
        "when": "key-code.active && focusedView != ''"
      },
      {
        "key": "ctrl+k right",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k right",
          "command": "views.moveViewRight"
        },
        "when": "key-code.active && focusedView != ''"
      },
      {
        "key": "ctrl+k up",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k up",
          "command": "views.moveViewUp"
        },
        "when": "key-code.active && focusedView != ''"
      },
      {
        "key": "f6",
        "command": "key-code.keybind",
        "args": {
          "key": "f6",
          "command": "workbench.action.debug.pause"
        },
        "when": "key-code.active && debugState == 'running'"
      },
      {
        "key": "f2",
        "command": "key-code.keybind",
        "args": {
          "key": "f2",
          "command": "debug.renameWatchExpression"
        },
        "when": "key-code.active && watchExpressionsFocused"
      },
      {
        "key": "f2",
        "command": "key-code.keybind",
        "args": {
          "key": "f2",
          "command": "debug.setVariable"
        },
        "when": "key-code.active && variablesFocused"
      },
      {
        "key": "space",
        "command": "key-code.keybind",
        "args": {
          "key": "space",
          "command": "debug.toggleBreakpoint"
        },
        "when": "key-code.active && breakpointsFocused && !inputFocus"
      },
      {
        "key": "shift+delete",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+delete",
          "command": "deleteFile"
        },
        "when": "key-code.active && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "deleteFile"
        },
        "when": "key-code.active && explorerViewletVisible && filesExplorerFocus && !explorerResourceMoveableToTrash && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.closeCallHierarchy"
        },
        "when": "key-code.active && callHierarchyVisible && !config.editor.stablePeek"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "editor.closeTypeHierarchy"
        },
        "when": "key-code.active && typeHierarchyVisible && !config.editor.stablePeek"
      },
      {
        "key": "enter",
        "command": "key-code.keybind",
        "args": {
          "key": "enter",
          "command": "explorer.openAndPassFocus"
        },
        "when": "key-code.active && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "filesExplorer.cancelCut"
        },
        "when": "key-code.active && explorerResourceCut && explorerViewletVisible && filesExplorerFocus && !inputFocus"
      },
      {
        "key": "ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+c",
          "command": "filesExplorer.copy"
        },
        "when": "key-code.active && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
      },
      {
        "key": "ctrl+x",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+x",
          "command": "filesExplorer.cut"
        },
        "when": "key-code.active && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "space",
        "command": "key-code.keybind",
        "args": {
          "key": "space",
          "command": "filesExplorer.openFilePreserveFocus"
        },
        "when": "key-code.active && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsFolder && !inputFocus"
      },
      {
        "key": "ctrl+v",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+v",
          "command": "filesExplorer.paste"
        },
        "when": "key-code.active && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "home",
        "command": "key-code.keybind",
        "args": {
          "key": "home",
          "command": "firstCompressedFolder"
        },
        "when": "key-code.active && explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
      },
      {
        "key": "end",
        "command": "key-code.keybind",
        "args": {
          "key": "end",
          "command": "lastCompressedFolder"
        },
        "when": "key-code.active && explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "moveFileToTrash"
        },
        "when": "key-code.active && explorerResourceMoveableToTrash && explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "right",
        "command": "key-code.keybind",
        "args": {
          "key": "right",
          "command": "nextCompressedFolder"
        },
        "when": "key-code.active && explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedLastFocus && !inputFocus"
      },
      {
        "key": "left",
        "command": "key-code.keybind",
        "args": {
          "key": "left",
          "command": "previousCompressedFolder"
        },
        "when": "key-code.active && explorerViewletCompressedFocus && explorerViewletVisible && filesExplorerFocus && !explorerViewletCompressedFirstFocus && !inputFocus"
      },
      {
        "key": "delete",
        "command": "key-code.keybind",
        "args": {
          "key": "delete",
          "command": "remote.tunnel.closeInline"
        },
        "when": "key-code.active && tunnelCloseable && tunnelViewFocus"
      },
      {
        "key": "ctrl+c",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+c",
          "command": "remote.tunnel.copyAddressInline"
        },
        "when": "key-code.active && tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
      },
      {
        "key": "f2",
        "command": "key-code.keybind",
        "args": {
          "key": "f2",
          "command": "remote.tunnel.label"
        },
        "when": "key-code.active && tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
      },
      {
        "key": "f2",
        "command": "key-code.keybind",
        "args": {
          "key": "f2",
          "command": "renameFile"
        },
        "when": "key-code.active && explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
      },
      {
        "key": "f5",
        "command": "key-code.keybind",
        "args": {
          "key": "f5",
          "command": "workbench.action.debug.continue"
        },
        "when": "key-code.active && debugState == 'stopped'"
      },
      {
        "key": "f11",
        "command": "key-code.keybind",
        "args": {
          "key": "f11",
          "command": "workbench.action.debug.stepInto"
        },
        "when": "key-code.active && debugState != 'inactive'"
      },
      {
        "key": "shift+escape",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+escape",
          "command": "closeReferenceSearch"
        },
        "when": "key-code.active && referenceSearchVisible && !config.editor.stablePeek"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "closeReferenceSearch"
        },
        "when": "key-code.active && referenceSearchVisible && !config.editor.stablePeek"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "notifications.hideList"
        },
        "when": "key-code.active && notificationCenterVisible"
      },
      {
        "key": "alt+left",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+left",
          "command": "workbench.action.quickInputBack"
        },
        "when": "key-code.active && inQuickOpen"
      },
      {
        "key": "ctrl+tab",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+tab",
          "command": "workbench.action.quickOpenNavigateNextInEditorPicker"
        },
        "when": "key-code.active && inEditorsPicker && inQuickOpen"
      },
      {
        "key": "ctrl+e",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+e",
          "command": "workbench.action.quickOpenNavigateNextInFilePicker"
        },
        "when": "key-code.active && inFilesPicker && inQuickOpen"
      },
      {
        "key": "ctrl+p",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+p",
          "command": "workbench.action.quickOpenNavigateNextInFilePicker"
        },
        "when": "key-code.active && inFilesPicker && inQuickOpen"
      },
      {
        "key": "ctrl+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+r",
          "command": "workbench.action.quickOpenNavigateNextInRecentFilesPicker"
        },
        "when": "key-code.active && inQuickOpen && inRecentFilesPicker"
      },
      {
        "key": "ctrl+q",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+q",
          "command": "workbench.action.quickOpenNavigateNextInViewPicker"
        },
        "when": "key-code.active && inQuickOpen && inViewsPicker"
      },
      {
        "key": "ctrl+shift+tab",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+tab",
          "command": "workbench.action.quickOpenNavigatePreviousInEditorPicker"
        },
        "when": "key-code.active && inEditorsPicker && inQuickOpen"
      },
      {
        "key": "ctrl+shift+e",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+e",
          "command": "workbench.action.quickOpenNavigatePreviousInFilePicker"
        },
        "when": "key-code.active && inFilesPicker && inQuickOpen"
      },
      {
        "key": "ctrl+shift+p",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+p",
          "command": "workbench.action.quickOpenNavigatePreviousInFilePicker"
        },
        "when": "key-code.active && inFilesPicker && inQuickOpen"
      },
      {
        "key": "ctrl+shift+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+r",
          "command": "workbench.action.quickOpenNavigatePreviousInRecentFilesPicker"
        },
        "when": "key-code.active && inQuickOpen && inRecentFilesPicker"
      },
      {
        "key": "ctrl+shift+q",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+q",
          "command": "workbench.action.quickOpenNavigatePreviousInViewPicker"
        },
        "when": "key-code.active && inQuickOpen && inViewsPicker"
      },
      {
        "key": "ctrl+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+r",
          "command": "workbench.action.reloadWindow"
        },
        "when": "key-code.active && isDevelopment"
      },
      {
        "key": "ctrl+shift+f",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+f",
          "command": "workbench.action.terminal.searchWorkspace"
        },
        "when": "key-code.active && terminalFocus && terminalProcessSupported && terminalTextSelected"
      },
      {
        "key": "ctrl+shift+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+i",
          "command": "workbench.action.toggleDevTools"
        },
        "when": "key-code.active && isDevelopment"
      },
      {
        "key": "escape",
        "command": "key-code.keybind",
        "args": {
          "key": "escape",
          "command": "notifications.hideToasts"
        },
        "when": "key-code.active && notificationFocus && notificationToastsVisible"
      },
      {
        "key": "f10",
        "command": "key-code.keybind",
        "args": {
          "key": "f10",
          "command": "extension.node-debug.startWithStopOnEntry"
        },
        "when": "key-code.active && !inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
      },
      {
        "key": "ctrl+k ctrl+alt+s",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+alt+s",
          "command": "git.stageSelectedRanges"
        },
        "when": "key-code.active && isInDiffEditor"
      },
      {
        "key": "ctrl+shift+v",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+v",
          "command": "markdown.showPreview"
        },
        "when": "key-code.active && !notebookEditorFocused && editorLangId == 'markdown'"
      },
      {
        "key": "shift+alt+f12",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+f12",
          "command": "references-view.findReferences"
        },
        "when": "key-code.active && editorHasReferenceProvider"
      },
      {
        "key": "f11",
        "command": "key-code.keybind",
        "args": {
          "key": "f11",
          "command": "extension.node-debug.startWithStopOnEntry"
        },
        "when": "key-code.active && !inDebugMode && debugConfigurationType == 'node' || !inDebugMode && debugConfigurationType == 'pwa-extensionHost' || !inDebugMode && debugConfigurationType == 'pwa-node'"
      },
      {
        "key": "ctrl+k ctrl+n",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+n",
          "command": "git.unstageSelectedRanges"
        },
        "when": "key-code.active && isInDiffEditor"
      },
      {
        "key": "ctrl+k v",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k v",
          "command": "markdown.showPreviewToSide"
        },
        "when": "key-code.active && !notebookEditorFocused && editorLangId == 'markdown'"
      },
      {
        "key": "f4",
        "command": "key-code.keybind",
        "args": {
          "key": "f4",
          "command": "references-view.next"
        },
        "when": "key-code.active && reference-list.hasResult && references-view.canNavigate"
      },
      {
        "key": "ctrl+k ctrl+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+k ctrl+r",
          "command": "git.revertSelectedRanges"
        },
        "when": "key-code.active && isInDiffEditor"
      },
      {
        "key": "shift+f4",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+f4",
          "command": "references-view.prev"
        },
        "when": "key-code.active && reference-list.hasResult && references-view.canNavigate"
      },
      {
        "key": "shift+alt+h",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+h",
          "command": "references-view.showCallHierarchy"
        },
        "when": "key-code.active && editorHasCallHierarchyProvider"
      },
      {
        "key": "ctrl+shift+d",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+d",
          "command": "data.preview"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+alt+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+i",
          "command": "emojisense.quickEmojiTerminal"
        },
        "when": "key-code.active && terminalFocus"
      },
      {
        "key": "ctrl+enter",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+enter",
          "command": "github.copilot.generate"
        },
        "when": "key-code.active && editorTextFocus && github.copilot.activated"
      },
      {
        "key": "ctrl+shift+space",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+space",
          "command": "issue.suggestRefresh"
        },
        "when": "key-code.active && suggestWidgetVisible"
      },
      {
        "key": "ctrl+alt+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+r",
          "command": "reactSnippets.search"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "shift+alt+r",
        "command": "key-code.keybind",
        "args": {
          "key": "shift+alt+r",
          "command": "remote-wsl.revealInExplorer"
        },
        "when": "key-code.active && editorFocus && remoteName == 'wsl'"
      },
      {
        "key": "ctrl+shift+u",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+u",
          "command": "rust-analyzer.parentModule"
        },
        "when": "key-code.active && editorTextFocus && editorLangId == 'rust'"
      },
      {
        "key": "ctrl+shift+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+r",
          "command": "workbench.view.extension.thunder-client"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+alt+s d",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+alt+s d",
          "command": "data.preview.on.side"
        },
        "when": "key-code.active"
      },
      {
        "key": "alt+\\",
        "command": "key-code.keybind",
        "args": {
          "key": "alt+\\",
          "command": "editor.action.inlineSuggest.trigger"
        },
        "when": "key-code.active && config.github.copilot.inlineSuggest.enable && editorTextFocus && !editorHasSelection && !inlineSuggestionsVisible"
      },
      {
        "key": "ctrl+shift+alt+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+alt+i",
          "command": "emojisense.quickEmojitextTerminal"
        },
        "when": "key-code.active && terminalFocus"
      },
      {
        "key": "ctrl+s",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+s",
          "command": "issue.createIssueFromFile"
        },
        "when": "key-code.active && !issues.creatingFromFile && resourceScheme == 'newIssue' && config.files.autoSave != 'off'"
      },
      {
        "key": "ctrl+shift+m",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+m",
          "command": "rust-analyzer.matchingBrace"
        },
        "when": "key-code.active && editorTextFocus && editorLangId == 'rust'"
      },
      {
        "key": "ctrl+shift+r",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+r",
          "command": "data.preview.remote"
        },
        "when": "key-code.active"
      },
      {
        "key": "ctrl+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+i",
          "command": "emojisense.quickEmoji"
        },
        "when": "key-code.active && editorTextFocus"
      },
      {
        "key": "ctrl+shift+j",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+j",
          "command": "rust-analyzer.joinLines"
        },
        "when": "key-code.active && editorTextFocus && editorLangId == 'rust'"
      },
      {
        "key": "ctrl+shift+i",
        "command": "key-code.keybind",
        "args": {
          "key": "ctrl+shift+i",
          "command": "emojisense.quickEmojitext"
        },
        "when": "key-code.active && editorTextFocus"
      }
    ],
    "commands": [
      {
        "command": "key-code.start",
        "title": "Key Code: Start"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "npm run compile-tests && npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js",
    "pack": "vsce package"
  },
  "devDependencies": {
    "@types/vscode": "^1.65.0",
    "@types/glob": "^7.2.0",
    "@types/mocha": "^9.0.0",
    "@types/node": "14.x",
    "@typescript-eslint/eslint-plugin": "^5.9.1",
    "@typescript-eslint/parser": "^5.9.1",
    "eslint": "^8.6.0",
    "glob": "^7.2.0",
    "mocha": "^9.1.3",
    "typescript": "^4.5.4",
    "ts-loader": "^9.2.6",
    "webpack": "^5.66.0",
    "webpack-cli": "^4.9.1",
    "@vscode/test-electron": "^2.0.3"
  }
}
